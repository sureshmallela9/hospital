
plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'eclipse'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

apply plugin: 'war'
war {
    baseName = 'hospital'
}

group = 'com.hospital'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.1'
    implementation 'org.springframework.boot:spring-boot-devtools:2.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest:2.6.1'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-data-rest:3.0.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'
    implementation 'org.springdoc:springdoc-openapi-hateoas:1.6.4'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.4'
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.4'
    implementation 'org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.1.2184'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'commons-logging:commons-logging:1.2'
    implementation 'commons-fileupload:commons-fileupload:1.3.2'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.apache.httpcomponents:httpclient'
    testImplementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.4'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
test.finalizedBy jacocoTestReport

description = 'hospital'
sonarqube {
    properties {
        property 'sonar.projectName', 'hospital'
        property "sonar.sourceEncoding", "UTF-8"
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.host.url', 'http://139.59.44.254:9000'
        property 'sonar.host.url', 'http://192.168.100.235:8080'
    }
}
tasks.named('sonarqube').configure {
    dependsOn test
}